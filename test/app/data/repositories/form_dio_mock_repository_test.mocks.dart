// Mocks generated by Mockito 5.4.4 from annotations
// in formularios_front/test/app/data/repositories/form_dio_mock_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:formularios_front/app/data/models/form_model.dart' as _i5;
import 'package:formularios_front/app/domain/repositories/form_storage.dart'
    as _i4;
import 'package:formularios_front/app/shared/helpers/services/http_service.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IHttpService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIHttpService extends _i1.Mock implements _i2.IHttpService {
  MockIHttpService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<dynamic> get(String? url) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> post(
    String? url, {
    dynamic data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {#data: data},
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> put(
    String? url, {
    dynamic data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {#data: data},
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> patch(
    String? url, {
    dynamic data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {#data: data},
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> delete(
    String? url, {
    dynamic data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {#data: data},
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
}

/// A class which mocks [IFormStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockIFormStorage extends _i1.Mock implements _i4.IFormStorage {
  MockIFormStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveForms({required List<dynamic>? forms}) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveForms,
          [],
          {#forms: forms},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.FormModel>> getForms() => (super.noSuchMethod(
        Invocation.method(
          #getForms,
          [],
        ),
        returnValue: _i3.Future<List<_i5.FormModel>>.value(<_i5.FormModel>[]),
      ) as _i3.Future<List<_i5.FormModel>>);

  @override
  _i3.Future<void> updateForm({required Map<String, dynamic>? form}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateForm,
          [],
          {#form: form},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteForm({required String? formId}) => (super.noSuchMethod(
        Invocation.method(
          #deleteForm,
          [],
          {#formId: formId},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
